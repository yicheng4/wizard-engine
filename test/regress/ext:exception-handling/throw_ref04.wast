(module
  (tag $e0)
  (tag $e1)

  (func (export "throw_ref-nested") (param i32) (result i32)
    (local $exn1 exnref)
    (local $exn2 exnref)
    (block $h1 (result exnref)
      (try_table (result i32) (catch_ref $e1 $h1) (throw $e1))
      (return)
    )
    (local.set $exn1)
    (block $h2 (result exnref)
      (try_table (result i32) (catch_ref $e0 $h2) (throw $e0))
      (return)
    )
    (local.set $exn2)
    (if (i32.eq (local.get 0) (i32.const 0))
      (then (throw_ref (local.get $exn1)))
    )
    (if (i32.eq (local.get 0) (i32.const 1))
      (then (throw_ref (local.get $exn2)))
    )
    (i32.const 23)
  )
)

;;(assert_exception (invoke "throw_ref-nested" (i32.const 0)))
;;(assert_exception (invoke "throw_ref-nested" (i32.const 1)))
(assert_return (invoke "throw_ref-nested" (i32.const 2)) (i32.const 23))
